<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>com.algaworks</groupId>
	<artifactId>brewer</artifactId>
	<version>1.0.0-SNAPSHOT</version>

	<packaging>war</packaging>

	<properties> <!-- Aqui estão valores deninidos como constantes para serem utilizados nas 
			depenências -->

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<failOnMissingWebXml>false</failOnMissingWebXml> <!-- Devido a ausência do Web.xml -->

		<java.version>1.8</java.version> <!-- Versão do Java -->

		<maven-compiler-pluging.version>3.2</maven-compiler-pluging.version> <!-- Versão do Maven -->

		<!-- Spring MVC -->
		<spring-framework.version>4.3.0.RELEASE</spring-framework.version> <!-- Versão do Spring -->

		<!-- Servlet API -->
		<servlet.version>3.1.0</servlet.version>

		<!-- Thymeleaf -->
		<thymeleaf.version>3.0.0.RELEASE</thymeleaf.version>

		<!-- Bean Validation / Usando o Hibernate Validator -->
		<hibernate-validator.version>5.2.4.Final</hibernate-validator.version>

		<!-- Thymeleaf - Layout Dialect / Para usar templates nas páginas com o Thymeleaf. Esse plugin já disponibiliza o JQuery -->
		<thymeleaf-layout-dialect.version>2.0.0</thymeleaf-layout-dialect.version>

		<!-- Logging - Para adicionar o SLF4J e LOG4J como API de log ao invés do padrao do Spring que é o commoms-loging -->
		<log4j.version>2.6</log4j.version>
		<jcl-over-slf4j.version>1.7.21</jcl-over-slf4j.version>

		<!-- JPA / Hibernate -->
		<hibernate.version>5.1.0.Final</hibernate.version>

		<!-- Postgresql-driver-version -->
		<postgresql.version>42.1.4</postgresql.version>

		<!-- Flyway-maven-plugin-version -->
		<flyway-maven-plugin.version>4.0.2</flyway-maven-plugin.version>
		
		<!-- Spring-Data JPA version -->
		<spring-data-jpa.version>1.10.2.RELEASE</spring-data-jpa.version>

	</properties>

	<build>
		<plugins>
		
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-pluging.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
	
		<!-- Flyway Migration -->
			<plugin>
				<groupId>org.flywaydb</groupId>
				<artifactId>flyway-maven-plugin</artifactId>
				<version>${flyway-maven-plugin.version}</version>
				<configuration>
					<driver>org.postgresql.Driver</driver>
				</configuration>
			</plugin>
			
		</plugins>
	</build>

	<dependencyManagement> <!-- Gerenciador de versões das dependências do Spring. Com ele não precisa 
			colocar versão nas dependências do Spring -->
		<dependencies>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-framework-bom</artifactId>
				<version>${spring-framework.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- Spring MVC -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>   <!-- Retira a dependência do commons-logging para substituí-lo pelo log4j -->
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Servlet API Necessário por causa da classe AbstractAnnotationConfigDispatcherServletInitializer 
			que dispensa o arquivo Web.xml -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${servlet.version}</version>  <!-- Definido em Propriedades. A versão do Servlet ainda tem que ser colocada -->
			<scope>provided</scope>  <!-- Usado apenas para compilação. Na geração do war não precisa empacotar 
				pois já terá no Tomcat -->
		</dependency>

		<!-- Thymeleaf -->
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf</artifactId>
			<version>${thymeleaf.version}</version>
		</dependency>

		<!-- Pacote integrado do Thymeleaf e Spring versao 4 -->
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf-spring4</artifactId>
			<version>${thymeleaf.version}</version>
		</dependency>

		<!-- Bean Validation / Usando o Hibernate Validator -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate-validator.version}</version>
			<scope>compile</scope>
		</dependency>

		<!-- Thymeleaf - Layout Dialect -->
		<dependency>
			<groupId>nz.net.ultraq.thymeleaf</groupId>
			<artifactId>thymeleaf-layout-dialect</artifactId>
			<version>${thymeleaf-layout-dialect.version}</version>
		</dependency>

		<!-- Logging - Colocando a dependência do slf4j e log4j que será usado no lugar do -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>  <!-- Dependência do slf4j que é um façade para uma API de log qualquer como o log4j. Usando as classes do SLF4J pode-se trocar a implementação da API de log sem alterar o código  -->
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${jcl-over-slf4j.version}</version>
		</dependency>

		<!-- JPA / Hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate.version}</version> <!-- 5.2.11 -->
			<scope>compile</scope>
		</dependency>

		<!-- Postgresql  -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgresql.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- Spring Data JPA -->
		<dependency>
        	<groupId>org.springframework.data</groupId>
        	<artifactId>spring-data-jpa</artifactId>
        	<version>${spring-data-jpa.version}</version>
    	</dependency>

	</dependencies>
	

<!--  Usado para a versao 2.0.0.RELEASE DO SPRING DATA JPA  
	<repositories>
    	<repository>
        	<id>spring-libs-release</id>
        	<name>Spring Releases</name>
        	<url>https://repo.spring.io/libs-release</url>
        	<snapshots>
            	<enabled>false</enabled>
        	</snapshots>
    	</repository>
	</repositories>
-->
</project>